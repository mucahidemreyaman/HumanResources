// <auto-generated />
using HumanResources.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HumanResources.Data.Migrations
{
    [DbContext(typeof(HumanResourcesContext))]
    partial class HumanResourcesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HumanResources.Domain.Absract.AccountInfo", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("USER_NAME")
                        .HasColumnOrder(11);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("PASSWORD")
                        .HasColumnOrder(12);

                    b.HasKey("Username");

                    b.ToTable("AccountInfos");
                });

            modelBuilder.Entity("HumanResources.Domain.Absract.BasePersonel", b =>
                {
                    b.Property<int>("PersonelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_PERSONEL")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelId"));

                    b.Property<string>("Birthday")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BIRTHDAY")
                        .HasColumnOrder(8);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMAIL")
                        .HasColumnOrder(7);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FIRST_NAME")
                        .HasColumnOrder(4);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GENDER")
                        .HasColumnOrder(6);

                    b.Property<string>("IdentityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("IDENTITY_ID")
                        .HasColumnOrder(2);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LAST_NAME")
                        .HasColumnOrder(5);

                    b.Property<string>("LoginDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("LOGIN_DATE")
                        .HasColumnOrder(3);

                    b.Property<string>("PermissionDays")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PERMISSION_DAYS")
                        .HasColumnOrder(9);

                    b.Property<string>("Salary")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SALARY")
                        .HasColumnOrder(10);

                    b.HasKey("PersonelId");

                    b.ToTable("BasePersonels");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BasePersonel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("HumanResources.Domain.Entity.BackEndPersonel", b =>
                {
                    b.HasBaseType("HumanResources.Domain.Absract.BasePersonel");

                    b.HasDiscriminator().HasValue("BackEndPersonel");
                });

            modelBuilder.Entity("HumanResources.Domain.Entity.DesignerPersonel", b =>
                {
                    b.HasBaseType("HumanResources.Domain.Absract.BasePersonel");

                    b.HasDiscriminator().HasValue("DesignerPersonel");
                });

            modelBuilder.Entity("HumanResources.Domain.Entity.FrontEndPersonel", b =>
                {
                    b.HasBaseType("HumanResources.Domain.Absract.BasePersonel");

                    b.HasDiscriminator().HasValue("FrontEndPersonel");
                });

            modelBuilder.Entity("HumanResources.Domain.Entity.Manager", b =>
                {
                    b.HasBaseType("HumanResources.Domain.Absract.BasePersonel");

                    b.HasDiscriminator().HasValue("Manager");
                });
#pragma warning restore 612, 618
        }
    }
}
